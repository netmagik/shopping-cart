{"version":3,"sources":["components/Product/forms/EditProductForm.js","components/Product/Product.js","components/Product/Summary.js","containers/Cart.js","App.js","index.js"],"names":["EditQuantity","props","useState","quantity","setQuantity","useEffect","product","totalProductPrice","price","toFixed","Form","inline","className","onSubmit","event","preventDefault","Row","FormGroup","FormLabel","FormControl","size","type","name","value","onChange","newQuantity","Number","target","role","Button","variant","onClick","disabled","onSaveQuantity","toggleEditing","Product","editing","setEditing","deleteProduct","id","Summary","totalQuantity","totalPrice","clearAll","products","length","Cart","setProducts","updateProduct","updatedProduct","updatedProducts","map","prod","filter","reduce","total","b","sum","sumTotal","App","Container","Col","md","span","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78b7b140.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {FormControl, Form, Row, FormGroup, FormLabel, Button} from 'react-bootstrap';\n\nconst EditQuantity = (props) => {\n\n    const [quantity, setQuantity] = useState(0)\n\n    useEffect(() => {\n        setQuantity(props.product.quantity)\n    },[props]);\n\n    const handleInputChange = (event) => {\n        const newQuantity = (Number(event.target.value))\n        setQuantity(newQuantity)\n\n    }\n\n    const addOne = () => {\n        const updatedQuantity = quantity + 1;\n        setQuantity(updatedQuantity)\n    }\n\n    const removeOne = () => {\n        const updatedQuantity = quantity - 1;\n        setQuantity(updatedQuantity);\n    }\n\n    const save = () => {\n        props.onSaveQuantity({...props.product, quantity})\n    }\n\n    let totalProductPrice = (quantity * props.product.price).toFixed(2);\n\n\n    return (\n        <>\n        <div>\n        Price: <strong>${totalProductPrice}</strong>\n        </div>\n        <Form inline className=\"mb-3 ml-4\"\n            onSubmit={(event) => {\n                event.preventDefault();\n            }}> \n            <Row>\n            <FormGroup className=\"ml-4\">\n            <FormLabel className=\"mr-2\">Quantity: </FormLabel>\n            <FormControl\n                size=\"sm\"\n                type=\"text\"\n                name=\"quantity\"\n                value={quantity}\n                onChange={handleInputChange}\n                />\n            </FormGroup>\n\n            <FormGroup>\n            <div className=\"btn-group ml-2\" role=\"group\">\n            <Button \n                variant=\"outline-dark\" \n                onClick={addOne}>\n                    Add one\n            </Button>\n            <Button \n                variant=\"outline-dark\"\n                disabled={quantity === 0}\n                onClick={removeOne}>\n                    Remove one\n            </Button>\n            </div>\n\n            <div className=\"btn-group ml-2\" role=\"group\">\n            <Button \n                variant=\"outline-dark\" \n                onClick={save}\n                disabled={quantity === props.quantity}>\n                    Save\n            </Button>\n            <Button \n                variant=\"outline-dark\"\n                onClick={props.toggleEditing}>\n                    Cancel\n            </Button>\n            </div>\n            </FormGroup>\n        \n            </Row>\n        </Form>\n        </>\n    )\n}\n\nexport default EditQuantity;","import React, {useState} from 'react';\nimport {Button} from 'react-bootstrap';\nimport EditForm from './forms/EditProductForm';\n\nconst Product = (props) => {\n\n    const [editing, setEditing] = useState(false);\n\n\n    // Edit Mode is Selected\n    const editProduct = (product) => {\n    setEditing(true);\n    }\n\n    const toggleEditing = () => {\n        setEditing(!editing)\n    }\n\n    const onChange = (product) => {\n        toggleEditing();\n        props.onChange(product);\n    }\n\n    let totalProductPrice = (props.product.quantity * props.product.price).toFixed(2);\n\n    return (\n        <div className=\"mt-4 mb-2 bg-light border pb-4\">\n            <h4 className=\"mt-3\">{props.product.name}</h4>\n            \n            {editing ? (\n                <EditForm \n                    product={props.product}\n                    onSaveQuantity={onChange}\n                    toggleEditing={toggleEditing}\n                    />\n                ) : (\n                <>\n                <div className=\"pb-2\">\n                    <strong>\n                    {props.product.quantity} x ${props.product.price} = {totalProductPrice} \n                    </strong>\n                </div>\n                <Button className=\"mr-2\" \n                        variant=\"outline-dark\" \n                        onClick={() => {editProduct(props.product)}}\n                >\n                    Change Quantity\n                </Button>\n                <Button variant=\"outline-dark\"\n                        onClick={() => props.deleteProduct(props.product.id)}>\n                        Remove\n                </Button>\n                </>\n               \n                )}\n        </div>\n                    \n    )\n}\n\nexport default Product;","import React, { Fragment } from 'react';\nimport {Button} from 'react-bootstrap';\n\nconst Summary = props => {\n    return (\n        <Fragment>\n        <h1 className=\"mt-5\">Shopping Cart</h1>\n        <div>Number of items:\n            <strong>{props.totalQuantity}</strong>\n        </div>\n        <div>Total: <strong>${props.totalPrice}</strong></div>\n        <div>\n            <Button \n                className=\"m-3\" \n                variant=\"outline-dark\" \n                onClick={props.clearAll}\n                disabled={!props.products || props.products.length === 0}>\n                Clear Shopping Cart\n            </Button>\n        </div>\n        </Fragment>\n    )\n}\n\nexport default Summary;","import React, {useEffect, useState} from 'react';\nimport Product from '../components/Product/Product';\nimport Summary from '../components/Product/Summary';\n\n\n\nconst Cart = (props) => {\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        setProducts(props.products)\n    }, [props])\n\n    const updateProduct = (updatedProduct) => {\n        const updatedProducts = products.map((prod) => {\n            if (prod.id === updatedProduct.id) {\n                return updatedProduct;\n            }\n            return prod;\n        })\n        .filter((prod) => prod.quantity > 0 )\n        setProducts(updatedProducts);\n    }\n\n      // Calculate Total Number of items\n    const totalQuantity = products.reduce((total, b) => {\n        return (total + b.quantity)\n    }, 0);\n\n    // Calculate Total Price\n    const sumTotal = products =>\n        products.reduce((sum, { price, quantity }) => sum + price * quantity, 0);\n  \n        const totalPrice = sumTotal(products).toFixed(2);\n\n    //Clear Shopping Cart\n    const clearAll = () => {\n        setProducts([])\n  }\n\n    return (\n        <>\n            <Summary \n                totalQuantity={totalQuantity} \n                totalPrice={totalPrice}   \n                clearAll={clearAll} \n                products={products}   />\n\n            <div className=\"my-3\">\n                {products.map((prod) => (\n                <Product \n                    product={prod}\n                    key={prod.id} \n                    deleteProduct={props.deleteProduct}\n                    onChange={updateProduct}\n                    />\n                ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Cart;","import React, {useState} from 'react';\nimport Cart from './containers/Cart';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nconst App = () => {\n\n  const initial = [\n    { id: 34, name: 'EGGS', quantity: 1, price: 3.99},\n    { id: 45, name: 'BUTTER', quantity: 2, price: 2.50},\n    { id: 56, name: 'MILK', quantity: 1, price: 1.90},\n    { id: 23, name: 'BREAD', quantity: 3, price: 4.50}\n  ]\n\n\n  const [products, setProducts] = useState(initial);\n  \n  // Delete Product\n  const deleteProductHandler = (id) => {\n    setProducts(products.filter((product) => product.id !== id));\n  }\n\n  \n  return (\n      <Container className=\"my-6\">\n        <Row className=\"justify-content-center\">\n          <Col md={{ span: 8}} className=\"text-center\">\n          \n          \n          <Cart \n            products={products} \n            deleteProduct={deleteProductHandler}\n          />\n           \n      </Col>\n      </Row>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}